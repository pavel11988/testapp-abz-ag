{"ast":null,"code":"import photoDefault from '../images/default-photo.jpg';\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst axios = require('axios');\n\nasync function getNewToken() {\n  // try{\n  //     const response = await axios.get(\n  //         `${BASE_URL}/token`\n  //         );\n  //         const token = response.data.token;\n  //         return token;\n  // } catch(error){\n  //     return error;\n  // }\n  const response = await axios.get(`${BASE_URL}/token`).then(function (data) {\n    const token = response.data.token;\n    console.log(token);\n    return token;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n}\n\nasync function getUsers(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/users?page=${page}&count=6`);\n    const users = response.data.users.map(_ref => {\n      let {\n        photo,\n        email,\n        id,\n        name,\n        phone,\n        position,\n        position_id,\n        registration_timestamp\n      } = _ref;\n      const avatar = photo ? photo : photoDefault;\n      return {\n        email: email,\n        id: id,\n        name: name,\n        phone: phone,\n        position: position,\n        photo: avatar,\n        position_id: position_id,\n        registration_timestamp: registration_timestamp\n      };\n    });\n    return users;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getPositions() {\n  try {\n    const response = await axios.get(`${BASE_URL}/positions`);\n    const positions = response.data.positions;\n    return positions;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function addNewUser(userFormData, token) {\n  // await axios.post(`${BASE_URL}/users`, {\n  //     data: userFormData,\n  //     headers: { 'Token': token}\n  //   }).then(function(response) {\n  //       console.log(response);\n  //   }).then(function(data){\n  //       console.log(data);\n  //       if(data.success){\n  //           console.log('success')\n  //       }else{\n  //           console.log('server-error')\n  //       }\n  //   }).catch(function (error) {\n  //     console.log(error);\n  // });\n  console.log(token);\n  await axios({\n    method: \"post\",\n    url: `${BASE_URL}/users`,\n    data: userFormData,\n    headers: {\n      \"Token\": token\n    }\n  }).then(function (response) {\n    console.log(response);\n  }).then(function (data) {\n    console.log(data);\n\n    if (data.success) {\n      console.log('success');\n    } else {\n      console.log('server-error');\n    }\n  }).catch(function (response) {\n    console.log(response);\n  });\n}\n\nexport { getNewToken, getUsers, getPositions, addNewUser };","map":{"version":3,"names":["photoDefault","BASE_URL","axios","require","getNewToken","response","get","then","data","token","console","log","catch","error","getUsers","page","users","map","photo","email","id","name","phone","position","position_id","registration_timestamp","avatar","getPositions","positions","addNewUser","userFormData","method","url","headers","success"],"sources":["/home/pavel/Desktop/Work/abz-test-app/src/services/users-api.js"],"sourcesContent":["import photoDefault from '../images/default-photo.jpg';\n\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\nconst axios = require('axios');\n\n\nasync function getNewToken() {\n    // try{\n    //     const response = await axios.get(\n    //         `${BASE_URL}/token`\n    //         );\n    //         const token = response.data.token;\n    //         return token;\n    // } catch(error){\n    //     return error;\n    // }\n    const response = await axios.get(`${BASE_URL}/token`)\n    .then(function(data) { \n        const token = response.data.token;\n        console.log(token);\n        return token; \n    }) \n    .catch(function(error) { \n        console.log(error)\n        return error;\n    });\n        \n}\n\nasync function getUsers(page) {\n    try {\n        const response = await axios.get(\n            `${BASE_URL}/users?page=${page}&count=6`\n        )\n\n        const users = response.data.users.map(({photo,email,id,name,phone,position,position_id,registration_timestamp}) => {\n            const avatar = photo\n              ? photo\n              : photoDefault;\n            return {\n                email: email,\n                id: id,\n                name: name,\n                phone: phone,\n                position: position,\n                photo: avatar,\n                position_id: position_id,\n                registration_timestamp: registration_timestamp,\n            };\n          });\n    \n        return users; \n\n    } catch(error){\n        return error;\n    }\n} \n\nasync function getPositions() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/positions`\n        )\n        const positions = response.data.positions;\n\n        return positions; \n    } catch(error){\n        return error;\n    }\n}\n\nasync function addNewUser(userFormData, token) {\n    // await axios.post(`${BASE_URL}/users`, {\n    //     data: userFormData,\n    //     headers: { 'Token': token}\n    //   }).then(function(response) {\n    //       console.log(response);\n    //   }).then(function(data){\n    //       console.log(data);\n    //       if(data.success){\n    //           console.log('success')\n    //       }else{\n    //           console.log('server-error')\n    //       }\n    //   }).catch(function (error) {\n    //     console.log(error);\n    // });\n    console.log(token)\n    await axios({\n        method: \"post\",\n        url: `${BASE_URL}/users`,\n        data: userFormData,\n        headers: { \"Token\": token },\n      })\n        .then(function (response) {\n          console.log(response);\n        })\n        .then(function (data) {\n        console.log(data);\n        if(data.success){\n            console.log('success')\n        }else{\n            console.log('server-error')\n        }\n        })\n        .catch(function (response) {\n    \n          console.log(response);\n        });\n\n}\n\nexport {\n    getNewToken,\n    getUsers,\n    getPositions,\n    addNewUser,\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}