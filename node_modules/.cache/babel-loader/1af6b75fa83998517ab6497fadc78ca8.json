{"ast":null,"code":"var _jsxFileName = \"/home/pavel/Desktop/Work/abz-test-app/src/components/App/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getNewToken, getUsers, addNewUser } from \"../../services/users-api\";\nimport { getPositions } from \"../../services/users-api\";\nimport UserList from \"../UsersList/UserList\";\nimport UserForm from \"../UserForm/UserForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [token, setToken] = useState('');\n  const [page, setPage] = useState(1); //useEffect для первого рендера\n\n  useEffect(() => {\n    getNewToken().then(token => {\n      setToken(token);\n    }).catch(error => console.log(error));\n    ;\n    getPositions().then(positions => {\n      setPositions(positions);\n    }).catch(error => console.log(error));\n    getUsers(page).then(users => {\n      setUsers(users);\n    }).catch(error => console.log(error));\n  }, []); //useEffect для load more\n\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    getUsers(page).then(users => {\n      setUsers(prevArr => [...prevArr, ...users]);\n    }).catch(error => console.log(error));\n  }, [page]);\n\n  const refreshUsers = () => {\n    getUsers(1).then(users => {\n      setUsers(users);\n    }).catch(error => console.log(error));\n  };\n\n  const loadMoreUsers = () => {\n    setPage(page + 1);\n  };\n\n  const addUser = user => {\n    const userFormData = new FormData(); // {photo, name, email, phone, position, position_id}\n    // userFormData.append('photo', photo);\n\n    console.log(user);\n    console.log(user.name); // user.map(field => {\n    //   Object.keys()\n    // })\n\n    console.log();\n    setPage(1);\n    refreshUsers();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: refreshUsers,\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMoreUsers,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      positions: positions,\n      onSubmit: addUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GbIz7dKFWhkWfoP6FT3iwH37swg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getNewToken","getUsers","addNewUser","getPositions","UserList","UserForm","App","users","setUsers","positions","setPositions","token","setToken","page","setPage","then","catch","error","console","log","prevArr","refreshUsers","loadMoreUsers","addUser","user","userFormData","FormData","name"],"sources":["/home/pavel/Desktop/Work/abz-test-app/src/components/App/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getNewToken, getUsers, addNewUser } from \"../../services/users-api\";\nimport { getPositions } from \"../../services/users-api\";\n\nimport UserList from \"../UsersList/UserList\";\nimport UserForm from \"../UserForm/UserForm\";\n\nfunction App() {\n\n  const [users, setUsers] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [token, setToken] = useState('');\n  const [page, setPage] = useState(1);\n\n\n  //useEffect для первого рендера\n  useEffect(() => {\n    getNewToken().then(token => {\n      setToken(token);\n    }).catch(error => console.log(error));;\n\n    getPositions().then(positions => {\n      setPositions(positions);\n    }).catch(error => console.log(error));\n\n    getUsers(page).then(users => {\n      setUsers(users)\n    }).catch(error => console.log(error));\n\n  }, []);\n\n\n  //useEffect для load more\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n    getUsers(page).then(users => {\n      setUsers(prevArr => [...prevArr, ...users])\n    }).catch(error => console.log(error));\n\n  }, [page])\n\n\n  const refreshUsers = () => {\n    getUsers(1)\n      .then(users => { setUsers(users) })\n      .catch(error => console.log(error))\n  };\n\n  const loadMoreUsers = () => {\n    setPage(page + 1);\n  }\n\n  const addUser = (user) => {\n    const userFormData = new FormData();\n    // {photo, name, email, phone, position, position_id}\n    // userFormData.append('photo', photo);\n    console.log(user);\n    console.log(user.name);\n\n    // user.map(field => {\n    //   Object.keys()\n    // })\n\n\n\n    console.log();\n    setPage(1);\n    refreshUsers();\n  }\n\n  return (\n    <div>\n      <h1>React app</h1>\n      <button onClick={refreshUsers}>Get Users</button> <br />\n      <UserList users={users} />\n      <button onClick={loadMoreUsers}>Load More</button>\n      <UserForm positions={positions} onSubmit={addUser} />\n\n      {/* {user &&\n        <div>\n          <img src={user.photo} alt=\"user\"/> \n          <p>{user.name}</p>\n          <p>{user.email}</p>\n          <p>{user.phone}</p>\n          <p>{user.position}</p>\n        </div>\n      } */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}