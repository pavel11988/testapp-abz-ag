{"ast":null,"code":"const BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst axios = require('axios');\n\nlet token = ''; // let contacts = [];\n\nasync function getNewToken() {\n  try {\n    const response = await axios.get(`${BASE_URL}/token`);\n    token = response.data.token;\n    return token;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getContats(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/users?page=1&count=6`);\n    const users = response.users;\n    return users;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getPosition() {\n  try {\n    const response = await axios.get(`${BASE_URL}/positions`);\n    const positions = response.data.positions;\n    return positions;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function updateUsers(user) {\n  await axios.post(`${BASE_URL}/users`, {\n    data: user\n  }).then(function (response) {\n    console.log(response);\n  });\n}\n\nexport { getNewToken, getContats, getPosition, updateUsers };","map":{"version":3,"names":["BASE_URL","axios","require","token","getNewToken","response","get","data","error","getContats","page","users","getPosition","positions","updateUsers","user","post","then","console","log"],"sources":["/home/pavel/Desktop/Work/abz-test-app/src/services/users-api.js"],"sourcesContent":["const BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\nconst axios = require('axios');\n\nlet token = '';\n// let contacts = [];\n\n\nasync function getNewToken() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/token`\n            );\n            token = response.data.token;\n            return token;\n    } catch(error){\n        return error;\n    }\n}\n\nasync function getContats(page) {\n    try {\n        const response = await axios.get(\n            `${BASE_URL}/users?page=1&count=6`\n        )\n        const users = response.users;\n        return users; \n\n    } catch(error){\n        return error;\n    }\n} \n\nasync function getPosition() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/positions`\n        )\n        const positions = response.data.positions;\n        return positions; \n    } catch(error){\n        return error;\n    }\n}\n\nasync function updateUsers(user) {\n    await axios.post(`${BASE_URL}/users`, {\n        data: user,\n      }).then(function(response) {\n          console.log(response);\n      })\n}\n\nexport {\n    getNewToken,\n    getContats,\n    getPosition,\n    updateUsers,\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,wDAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,KAAK,GAAG,EAAZ,C,CACA;;AAGA,eAAeC,WAAf,GAA6B;EACzB,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,QADO,CAAvB;IAGIG,KAAK,GAAGE,QAAQ,CAACE,IAAT,CAAcJ,KAAtB;IACA,OAAOA,KAAP;EACP,CAND,CAME,OAAMK,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAeC,UAAf,CAA0BC,IAA1B,EAAgC;EAC5B,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,uBADO,CAAvB;IAGA,MAAMW,KAAK,GAAGN,QAAQ,CAACM,KAAvB;IACA,OAAOA,KAAP;EAEH,CAPD,CAOE,OAAMH,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAeI,WAAf,GAA6B;EACzB,IAAG;IACC,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,YADO,CAAvB;IAGA,MAAMa,SAAS,GAAGR,QAAQ,CAACE,IAAT,CAAcM,SAAhC;IACA,OAAOA,SAAP;EACH,CAND,CAME,OAAML,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAeM,WAAf,CAA2BC,IAA3B,EAAiC;EAC7B,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAEhB,QAAS,QAAvB,EAAgC;IAClCO,IAAI,EAAEQ;EAD4B,CAAhC,EAEDE,IAFC,CAEI,UAASZ,QAAT,EAAmB;IACvBa,OAAO,CAACC,GAAR,CAAYd,QAAZ;EACH,CAJG,CAAN;AAKH;;AAED,SACID,WADJ,EAEIK,UAFJ,EAGIG,WAHJ,EAIIE,WAJJ"},"metadata":{},"sourceType":"module"}