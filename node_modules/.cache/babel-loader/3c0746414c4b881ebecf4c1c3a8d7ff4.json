{"ast":null,"code":"import photoDefault from '../images/default-photo.jpg';\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst axios = require('axios');\n\nlet token;\n\nasync function getNewToken() {\n  // try{\n  //     const response = await axios.get(\n  //         `${BASE_URL}/token`\n  //         );\n  //         const token = response.data.token;\n  //         return token;\n  // } catch(error){\n  //     return error;\n  // }\n  const response = await axios.get(`${BASE_URL}/token`).then(function (response) {\n    token = response.data.token;\n    console.log(token);\n    return token;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n}\n\nasync function getUsers(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/users?page=${page}&count=6`);\n    const users = response.data.users.map(_ref => {\n      let {\n        photo,\n        email,\n        id,\n        name,\n        phone,\n        position,\n        position_id,\n        registration_timestamp\n      } = _ref;\n      const avatar = photo ? photo : photoDefault;\n      return {\n        email: email,\n        id: id,\n        name: name,\n        phone: phone,\n        position: position,\n        photo: avatar,\n        position_id: position_id,\n        registration_timestamp: registration_timestamp\n      };\n    });\n    return users;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getPositions() {\n  try {\n    const response = await axios.get(`${BASE_URL}/positions`);\n    const positions = response.data.positions;\n    return positions;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function addNewUser(userFormData) {\n  // await axios.post(`${BASE_URL}/users`, {\n  //     data: userFormData,\n  //     headers: { 'Token': token}\n  //   }).then(function(response) {\n  //       console.log(response);\n  //   }).then(function(data){\n  //       console.log(data);\n  //       if(data.success){\n  //           console.log('success')\n  //       }else{\n  //           console.log('server-error')\n  //       }\n  //   }).catch(function (error) {\n  //     console.log(error);\n  // });\n  console.log('Get token func...');\n  await getNewToken();\n  console.log('after function: ', token); // await axios({\n  //     method: \"post\",\n  //     url: `${BASE_URL}/users`,\n  //     data: userFormData,\n  //     headers: { \"Token\": token },\n  //   })\n  //     .then(function (response) {\n  //       console.log(response);\n  //     })\n  //     .then(function (data) {\n  //     console.log(data);\n  //     if(data.success){\n  //         console.log('success')\n  //     }else{\n  //         console.log('server-error')\n  //     }\n  //     })\n  //     .catch(function (response) {\n  //       console.log(response);\n  //     });\n}\n\nexport { getNewToken, getUsers, getPositions, addNewUser };","map":{"version":3,"names":["photoDefault","BASE_URL","axios","require","token","getNewToken","response","get","then","data","console","log","catch","error","getUsers","page","users","map","photo","email","id","name","phone","position","position_id","registration_timestamp","avatar","getPositions","positions","addNewUser","userFormData"],"sources":["/home/pavel/Desktop/Work/abz-test-app/src/services/users-api.js"],"sourcesContent":["import photoDefault from '../images/default-photo.jpg';\n\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\nconst axios = require('axios');\nlet token;\n\nasync function getNewToken() {\n    // try{\n    //     const response = await axios.get(\n    //         `${BASE_URL}/token`\n    //         );\n    //         const token = response.data.token;\n    //         return token;\n    // } catch(error){\n    //     return error;\n    // }\n    const response = await axios.get(`${BASE_URL}/token`)\n    .then(function(response) { \n        token = response.data.token;\n        console.log(token);\n        return token; \n    }) \n    .catch(function(error) { \n        console.log(error)\n        return error;\n    });\n        \n}\n\nasync function getUsers(page) {\n    try {\n        const response = await axios.get(\n            `${BASE_URL}/users?page=${page}&count=6`\n        )\n\n        const users = response.data.users.map(({photo,email,id,name,phone,position,position_id,registration_timestamp}) => {\n            const avatar = photo\n              ? photo\n              : photoDefault;\n            return {\n                email: email,\n                id: id,\n                name: name,\n                phone: phone,\n                position: position,\n                photo: avatar,\n                position_id: position_id,\n                registration_timestamp: registration_timestamp,\n            };\n          });\n    \n        return users; \n\n    } catch(error){\n        return error;\n    }\n} \n\nasync function getPositions() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/positions`\n        )\n        const positions = response.data.positions;\n\n        return positions; \n    } catch(error){\n        return error;\n    }\n}\n\nasync function addNewUser(userFormData) {\n    // await axios.post(`${BASE_URL}/users`, {\n    //     data: userFormData,\n    //     headers: { 'Token': token}\n    //   }).then(function(response) {\n    //       console.log(response);\n    //   }).then(function(data){\n    //       console.log(data);\n    //       if(data.success){\n    //           console.log('success')\n    //       }else{\n    //           console.log('server-error')\n    //       }\n    //   }).catch(function (error) {\n    //     console.log(error);\n    // });\n    console.log('Get token func...')\n    await getNewToken();\n    console.log('after function: ',token);\n\n    // await axios({\n    //     method: \"post\",\n    //     url: `${BASE_URL}/users`,\n    //     data: userFormData,\n    //     headers: { \"Token\": token },\n    //   })\n    //     .then(function (response) {\n    //       console.log(response);\n    //     })\n    //     .then(function (data) {\n    //     console.log(data);\n    //     if(data.success){\n    //         console.log('success')\n    //     }else{\n    //         console.log('server-error')\n    //     }\n    //     })\n    //     .catch(function (response) {\n    \n    //       console.log(response);\n    //     });\n\n}\n\nexport {\n    getNewToken,\n    getUsers,\n    getPositions,\n    addNewUser,\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAAG,wDAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,KAAJ;;AAEA,eAAeC,WAAf,GAA6B;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEN,QAAS,QAAtB,EACtBO,IADsB,CACjB,UAASF,QAAT,EAAmB;IACrBF,KAAK,GAAGE,QAAQ,CAACG,IAAT,CAAcL,KAAtB;IACAM,OAAO,CAACC,GAAR,CAAYP,KAAZ;IACA,OAAOA,KAAP;EACH,CALsB,EAMtBQ,KANsB,CAMhB,UAASC,KAAT,EAAgB;IACnBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACA,OAAOA,KAAP;EACH,CATsB,CAAvB;AAWH;;AAED,eAAeC,QAAf,CAAwBC,IAAxB,EAA8B;EAC1B,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,eAAcc,IAAK,UADZ,CAAvB;IAIA,MAAMC,KAAK,GAAGV,QAAQ,CAACG,IAAT,CAAcO,KAAd,CAAoBC,GAApB,CAAwB,QAA6E;MAAA,IAA5E;QAACC,KAAD;QAAOC,KAAP;QAAaC,EAAb;QAAgBC,IAAhB;QAAqBC,KAArB;QAA2BC,QAA3B;QAAoCC,WAApC;QAAgDC;MAAhD,CAA4E;MAC/G,MAAMC,MAAM,GAAGR,KAAK,GAChBA,KADgB,GAEhBlB,YAFJ;MAGA,OAAO;QACHmB,KAAK,EAAEA,KADJ;QAEHC,EAAE,EAAEA,EAFD;QAGHC,IAAI,EAAEA,IAHH;QAIHC,KAAK,EAAEA,KAJJ;QAKHC,QAAQ,EAAEA,QALP;QAMHL,KAAK,EAAEQ,MANJ;QAOHF,WAAW,EAAEA,WAPV;QAQHC,sBAAsB,EAAEA;MARrB,CAAP;IAUD,CAdW,CAAd;IAgBA,OAAOT,KAAP;EAEH,CAvBD,CAuBE,OAAMH,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAec,YAAf,GAA8B;EAC1B,IAAG;IACC,MAAMrB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,YADO,CAAvB;IAGA,MAAM2B,SAAS,GAAGtB,QAAQ,CAACG,IAAT,CAAcmB,SAAhC;IAEA,OAAOA,SAAP;EACH,CAPD,CAOE,OAAMf,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAegB,UAAf,CAA0BC,YAA1B,EAAwC;EACpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACApB,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACA,MAAMN,WAAW,EAAjB;EACAK,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BP,KAA/B,EAlBoC,CAoBpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;AAEH;;AAED,SACIC,WADJ,EAEIS,QAFJ,EAGIa,YAHJ,EAIIE,UAJJ"},"metadata":{},"sourceType":"module"}