{"ast":null,"code":"const BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst axios = require('axios');\n\nlet token;\n\nasync function getNewToken() {\n  await axios.get(`${BASE_URL}/token`).then(function (response) {\n    token = response.data.token;\n    return token;\n  }).catch(function (error) {\n    console.log(error);\n    return error;\n  });\n}\n\nasync function getUsers(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/users?page=${page}&count=6`);\n    const pages = response.data.total_pages;\n    const users = response.data.users.map(_ref => {\n      let {\n        photo,\n        email,\n        id,\n        name,\n        phone,\n        position,\n        position_id,\n        registration_timestamp\n      } = _ref;\n      return {\n        email: email,\n        id: id,\n        name: name,\n        phone: phone,\n        position: position,\n        photo: photo,\n        position_id: position_id,\n        registration_timestamp: registration_timestamp\n      };\n    });\n    return {\n      users: users,\n      pages: pages\n    };\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getPositions() {\n  try {\n    const response = await axios.get(`${BASE_URL}/positions`);\n    const positions = response.data.positions;\n    return positions;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function addNewUser(userFormData) {\n  let result = {};\n  await getNewToken();\n  await axios({\n    method: \"post\",\n    url: `${BASE_URL}/users`,\n    data: userFormData,\n    headers: {\n      \"Token\": token\n    }\n  }).then(function (response) {\n    result = response.data;\n    return result;\n  }).catch(function (response) {\n    result = response.response.data;\n    return result;\n  });\n  return result;\n}\n\nexport { getNewToken, getUsers, getPositions, addNewUser // getPages\n};","map":{"version":3,"names":["BASE_URL","axios","require","token","getNewToken","get","then","response","data","catch","error","console","log","getUsers","page","pages","total_pages","users","map","photo","email","id","name","phone","position","position_id","registration_timestamp","getPositions","positions","addNewUser","userFormData","result","method","url","headers"],"sources":["/home/pavel/Desktop/Work/testapp-abz-ag/src/services/users-api.js"],"sourcesContent":["\n\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\nconst axios = require('axios');\n\nlet token;\n\nasync function getNewToken() {\n    await axios.get(`${BASE_URL}/token`)\n    .then(function(response) { \n        token = response.data.token;\n        return token; \n    }) \n    .catch(function(error) { \n        console.log(error)\n        return error;\n    });\n        \n}\n\nasync function getUsers(page) {\n    try {\n        const response = await axios.get(\n            `${BASE_URL}/users?page=${page}&count=6`\n        )\n        const pages = response.data.total_pages;\n        const users = response.data.users.map(({photo,email,id,name,phone,position,position_id,registration_timestamp}) => {\n            return {\n                email: email,\n                id: id,\n                name: name,\n                phone: phone,\n                position: position,\n                photo: photo,\n                position_id: position_id,\n                registration_timestamp: registration_timestamp,\n            };\n          });\n        return {users: users, pages:pages}; \n\n    } catch(error){\n        return error;\n    }\n}\n\n\nasync function getPositions() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/positions`\n        )\n        const positions = response.data.positions;\n\n        return positions; \n    } catch(error){\n        return error;\n    }\n}\n\nasync function addNewUser(userFormData) {\n    let result = {};\n    await getNewToken();\n    await axios({\n        method: \"post\",\n        url: `${BASE_URL}/users`,\n        data: userFormData,\n        headers: { \"Token\": token },\n      })\n        .then(function (response) {\n            result = response.data;\n            return result;\n        })\n        .catch(function (response) {\n            result = response.response.data;\n            return result;\n            \n        });\n    return result;\n}\n\n\nexport {\n    getNewToken,\n    getUsers,\n    getPositions,\n    addNewUser,\n    // getPages\n}"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,wDAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,KAAJ;;AAEA,eAAeC,WAAf,GAA6B;EACzB,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEL,QAAS,QAAtB,EACLM,IADK,CACA,UAASC,QAAT,EAAmB;IACrBJ,KAAK,GAAGI,QAAQ,CAACC,IAAT,CAAcL,KAAtB;IACA,OAAOA,KAAP;EACH,CAJK,EAKLM,KALK,CAKC,UAASC,KAAT,EAAgB;IACnBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,OAAOA,KAAP;EACH,CARK,CAAN;AAUH;;AAED,eAAeG,QAAf,CAAwBC,IAAxB,EAA8B;EAC1B,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACI,GAAN,CAClB,GAAEL,QAAS,eAAcc,IAAK,UADZ,CAAvB;IAGA,MAAMC,KAAK,GAAGR,QAAQ,CAACC,IAAT,CAAcQ,WAA5B;IACA,MAAMC,KAAK,GAAGV,QAAQ,CAACC,IAAT,CAAcS,KAAd,CAAoBC,GAApB,CAAwB,QAA6E;MAAA,IAA5E;QAACC,KAAD;QAAOC,KAAP;QAAaC,EAAb;QAAgBC,IAAhB;QAAqBC,KAArB;QAA2BC,QAA3B;QAAoCC,WAApC;QAAgDC;MAAhD,CAA4E;MAC/G,OAAO;QACHN,KAAK,EAAEA,KADJ;QAEHC,EAAE,EAAEA,EAFD;QAGHC,IAAI,EAAEA,IAHH;QAIHC,KAAK,EAAEA,KAJJ;QAKHC,QAAQ,EAAEA,QALP;QAMHL,KAAK,EAAEA,KANJ;QAOHM,WAAW,EAAEA,WAPV;QAQHC,sBAAsB,EAAEA;MARrB,CAAP;IAUD,CAXW,CAAd;IAYA,OAAO;MAACT,KAAK,EAAEA,KAAR;MAAeF,KAAK,EAACA;IAArB,CAAP;EAEH,CAnBD,CAmBE,OAAML,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAGD,eAAeiB,YAAf,GAA8B;EAC1B,IAAG;IACC,MAAMpB,QAAQ,GAAG,MAAMN,KAAK,CAACI,GAAN,CAClB,GAAEL,QAAS,YADO,CAAvB;IAGA,MAAM4B,SAAS,GAAGrB,QAAQ,CAACC,IAAT,CAAcoB,SAAhC;IAEA,OAAOA,SAAP;EACH,CAPD,CAOE,OAAMlB,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAemB,UAAf,CAA0BC,YAA1B,EAAwC;EACpC,IAAIC,MAAM,GAAG,EAAb;EACA,MAAM3B,WAAW,EAAjB;EACA,MAAMH,KAAK,CAAC;IACR+B,MAAM,EAAE,MADA;IAERC,GAAG,EAAG,GAAEjC,QAAS,QAFT;IAGRQ,IAAI,EAAEsB,YAHE;IAIRI,OAAO,EAAE;MAAE,SAAS/B;IAAX;EAJD,CAAD,CAAL,CAMDG,IANC,CAMI,UAAUC,QAAV,EAAoB;IACtBwB,MAAM,GAAGxB,QAAQ,CAACC,IAAlB;IACA,OAAOuB,MAAP;EACH,CATC,EAUDtB,KAVC,CAUK,UAAUF,QAAV,EAAoB;IACvBwB,MAAM,GAAGxB,QAAQ,CAACA,QAAT,CAAkBC,IAA3B;IACA,OAAOuB,MAAP;EAEH,CAdC,CAAN;EAeA,OAAOA,MAAP;AACH;;AAGD,SACI3B,WADJ,EAEIS,QAFJ,EAGIc,YAHJ,EAIIE,UAJJ,CAKI;AALJ"},"metadata":{},"sourceType":"module"}