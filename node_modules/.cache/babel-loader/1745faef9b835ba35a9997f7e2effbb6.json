{"ast":null,"code":"import photoDefault from '../images/default-photo.jpg';\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst axios = require('axios');\n\nasync function getNewToken() {\n  try {\n    const response = await axios.get(`${BASE_URL}/token`);\n    const token = response.data.token;\n    return token;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function fetchUsers(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/users?page=${page}&count=6`);\n    const users = response.data.users.map(_ref => {\n      let {\n        photo,\n        email,\n        id,\n        title,\n        phone,\n        position,\n        position_id,\n        registration_timestamp\n      } = _ref;\n      const avatar = photo ? photo : photoDefault;\n      return {\n        email: email,\n        id: id,\n        name: title,\n        phone: phone,\n        position: position,\n        photo: avatar,\n        position_id: position_id,\n        registration_timestamp: registration_timestamp\n      };\n    });\n    console.log(users);\n    return users;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getPositions() {\n  try {\n    const response = await axios.get(`${BASE_URL}/positions`);\n    const positions = response.data.positions;\n    return positions;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function updateUsers(user) {\n  await axios.post(`${BASE_URL}/users`, {\n    data: user\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nasync function getUsers() {}\n\nexport { getNewToken, getUsers, getPositions, updateUsers };","map":{"version":3,"names":["photoDefault","BASE_URL","axios","require","getNewToken","response","get","token","data","error","fetchUsers","page","users","map","photo","email","id","title","phone","position","position_id","registration_timestamp","avatar","name","console","log","getPositions","positions","updateUsers","user","post","then","catch","getUsers"],"sources":["/home/pavel/Desktop/Work/abz-test-app/src/services/users-api.js"],"sourcesContent":["import photoDefault from '../images/default-photo.jpg';\n\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\nconst axios = require('axios');\n\nasync function getNewToken() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/token`\n            );\n            const token = response.data.token;\n\n            return token;\n    } catch(error){\n        return error;\n    }\n}\n\nasync function fetchUsers(page) {\n    try {\n        const response = await axios.get(\n            `${BASE_URL}/users?page=${page}&count=6`\n        )\n\n        const users = response.data.users.map(({photo,email,id,title,phone,position,position_id,registration_timestamp}) => {\n            const avatar = photo\n              ? photo\n              : photoDefault;\n            return {\n                email: email,\n                id: id,\n                name: title,\n                phone: phone,\n                position: position,\n                photo: avatar,\n                position_id: position_id,\n                registration_timestamp: registration_timestamp,\n            };\n          });\n        console.log(users)\n        return users; \n\n    } catch(error){\n        return error;\n    }\n} \n\nasync function getPositions() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/positions`\n        )\n        const positions = response.data.positions;\n        return positions; \n    } catch(error){\n        return error;\n    }\n}\n\nasync function updateUsers(user) {\n    await axios.post(`${BASE_URL}/users`, {\n        data: user,\n      }).then(function(response) {\n          console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n}\n\nasync function getUsers(){\n\n}\n\nexport {\n    getNewToken,\n    getUsers,\n    getPositions,\n    updateUsers,\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAAG,wDAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAeC,WAAf,GAA6B;EACzB,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAClB,GAAEL,QAAS,QADO,CAAvB;IAGI,MAAMM,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAcD,KAA5B;IAEA,OAAOA,KAAP;EACP,CAPD,CAOE,OAAME,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAeC,UAAf,CAA0BC,IAA1B,EAAgC;EAC5B,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAClB,GAAEL,QAAS,eAAcU,IAAK,UADZ,CAAvB;IAIA,MAAMC,KAAK,GAAGP,QAAQ,CAACG,IAAT,CAAcI,KAAd,CAAoBC,GAApB,CAAwB,QAA8E;MAAA,IAA7E;QAACC,KAAD;QAAOC,KAAP;QAAaC,EAAb;QAAgBC,KAAhB;QAAsBC,KAAtB;QAA4BC,QAA5B;QAAqCC,WAArC;QAAiDC;MAAjD,CAA6E;MAChH,MAAMC,MAAM,GAAGR,KAAK,GAChBA,KADgB,GAEhBd,YAFJ;MAGA,OAAO;QACHe,KAAK,EAAEA,KADJ;QAEHC,EAAE,EAAEA,EAFD;QAGHO,IAAI,EAAEN,KAHH;QAIHC,KAAK,EAAEA,KAJJ;QAKHC,QAAQ,EAAEA,QALP;QAMHL,KAAK,EAAEQ,MANJ;QAOHF,WAAW,EAAEA,WAPV;QAQHC,sBAAsB,EAAEA;MARrB,CAAP;IAUD,CAdW,CAAd;IAeAG,OAAO,CAACC,GAAR,CAAYb,KAAZ;IACA,OAAOA,KAAP;EAEH,CAvBD,CAuBE,OAAMH,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAeiB,YAAf,GAA8B;EAC1B,IAAG;IACC,MAAMrB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAClB,GAAEL,QAAS,YADO,CAAvB;IAGA,MAAM0B,SAAS,GAAGtB,QAAQ,CAACG,IAAT,CAAcmB,SAAhC;IACA,OAAOA,SAAP;EACH,CAND,CAME,OAAMlB,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAemB,WAAf,CAA2BC,IAA3B,EAAiC;EAC7B,MAAM3B,KAAK,CAAC4B,IAAN,CAAY,GAAE7B,QAAS,QAAvB,EAAgC;IAClCO,IAAI,EAAEqB;EAD4B,CAAhC,EAEDE,IAFC,CAEI,UAAS1B,QAAT,EAAmB;IACvBmB,OAAO,CAACC,GAAR,CAAYpB,QAAZ;EACH,CAJG,EAID2B,KAJC,CAIK,UAAUvB,KAAV,EAAiB;IACxBe,OAAO,CAACC,GAAR,CAAYhB,KAAZ;EACD,CANG,CAAN;AAOH;;AAED,eAAewB,QAAf,GAAyB,CAExB;;AAED,SACI7B,WADJ,EAEI6B,QAFJ,EAGIP,YAHJ,EAIIE,WAJJ"},"metadata":{},"sourceType":"module"}