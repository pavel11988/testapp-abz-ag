{"ast":null,"code":"import photoDefault from '../images/default-photo.jpg';\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\n\nconst axios = require('axios');\n\nlet token = ''; // let users = [];\n\nasync function getNewToken() {\n  try {\n    const response = await axios.get(`${BASE_URL}/token`);\n    token = response.data.token;\n    console.log(token);\n    return token;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getUsers(page) {\n  try {\n    const response = await axios.get(`${BASE_URL}/users?page=${page}&count=6`); // const users = response.data.users;\n\n    const users = response.data.users.map(_ref => {\n      let {\n        photo,\n        email,\n        id,\n        itle,\n        phone,\n        position,\n        position_id,\n        registration_timestamp\n      } = _ref;\n      const avatar = user.photo ? user.photo : photoDefault;\n      return {\n        email: user.email,\n        id: user.id,\n        name: user.title,\n        phone: user.phone,\n        position: user.position,\n        photo: avatar,\n        position_id: user.position_id,\n        registration_timestamp: user.registration_timestamp\n      };\n    });\n    console.log(users);\n    return users;\n  } catch (error) {\n    return error;\n  }\n} // https://frontend-test-assignment-api.abz.agency/images/users/5fa2a6597d98216.jpeg\n\n\nasync function getPosition() {\n  try {\n    const response = await axios.get(`${BASE_URL}/positions`);\n    const positions = response.data.positions;\n    console.log(positions);\n    return positions;\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function updateUsers(user) {\n  await axios.post(`${BASE_URL}/users`, {\n    data: user\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport { getNewToken, getUsers, getPosition, updateUsers };","map":{"version":3,"names":["photoDefault","BASE_URL","axios","require","token","getNewToken","response","get","data","console","log","error","getUsers","page","users","map","photo","email","id","itle","phone","position","position_id","registration_timestamp","avatar","user","name","title","getPosition","positions","updateUsers","post","then","catch"],"sources":["/home/pavel/Desktop/Work/abz-test-app/src/services/users-api.js"],"sourcesContent":["import photoDefault from '../images/default-photo.jpg';\n\nconst BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1';\nconst axios = require('axios');\n\nlet token = '';\n// let users = [];\n\n\nasync function getNewToken() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/token`\n            );\n            token = response.data.token;\n            console.log(token);\n            return token;\n    } catch(error){\n        return error;\n    }\n}\n\nasync function getUsers(page) {\n    try {\n        const response = await axios.get(\n            `${BASE_URL}/users?page=${page}&count=6`\n        )\n        // const users = response.data.users;\n        const users = response.data.users.map(({photo,email,id,itle,phone,position,position_id,registration_timestamp}) => {\n            const avatar = user.photo\n              ? user.photo\n              : photoDefault;\n            return {\n                email: user.email,\n                id: user.id,\n                name: user.title,\n                phone: user.phone,\n                position: user.position,\n                photo: avatar,\n                position_id: user.position_id,\n                registration_timestamp: user.registration_timestamp,\n            };\n          });\n        console.log(users)\n        return users; \n\n    } catch(error){\n        return error;\n    }\n} \n\n// https://frontend-test-assignment-api.abz.agency/images/users/5fa2a6597d98216.jpeg\n\n\nasync function getPosition() {\n    try{\n        const response = await axios.get(\n            `${BASE_URL}/positions`\n        )\n        const positions = response.data.positions;\n        console.log(positions)\n        return positions; \n    } catch(error){\n        return error;\n    }\n}\n\nasync function updateUsers(user) {\n    await axios.post(`${BASE_URL}/users`, {\n        data: user,\n      }).then(function(response) {\n          console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n}\n\nexport {\n    getNewToken,\n    getUsers,\n    getPosition,\n    updateUsers,\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAAG,wDAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,KAAK,GAAG,EAAZ,C,CACA;;AAGA,eAAeC,WAAf,GAA6B;EACzB,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,QADO,CAAvB;IAGIG,KAAK,GAAGE,QAAQ,CAACE,IAAT,CAAcJ,KAAtB;IACAK,OAAO,CAACC,GAAR,CAAYN,KAAZ;IACA,OAAOA,KAAP;EACP,CAPD,CAOE,OAAMO,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAeC,QAAf,CAAwBC,IAAxB,EAA8B;EAC1B,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,eAAcY,IAAK,UADZ,CAAvB,CADA,CAIA;;IACA,MAAMC,KAAK,GAAGR,QAAQ,CAACE,IAAT,CAAcM,KAAd,CAAoBC,GAApB,CAAwB,QAA6E;MAAA,IAA5E;QAACC,KAAD;QAAOC,KAAP;QAAaC,EAAb;QAAgBC,IAAhB;QAAqBC,KAArB;QAA2BC,QAA3B;QAAoCC,WAApC;QAAgDC;MAAhD,CAA4E;MAC/G,MAAMC,MAAM,GAAGC,IAAI,CAACT,KAAL,GACXS,IAAI,CAACT,KADM,GAEXhB,YAFJ;MAGA,OAAO;QACHiB,KAAK,EAAEQ,IAAI,CAACR,KADT;QAEHC,EAAE,EAAEO,IAAI,CAACP,EAFN;QAGHQ,IAAI,EAAED,IAAI,CAACE,KAHR;QAIHP,KAAK,EAAEK,IAAI,CAACL,KAJT;QAKHC,QAAQ,EAAEI,IAAI,CAACJ,QALZ;QAMHL,KAAK,EAAEQ,MANJ;QAOHF,WAAW,EAAEG,IAAI,CAACH,WAPf;QAQHC,sBAAsB,EAAEE,IAAI,CAACF;MAR1B,CAAP;IAUD,CAdW,CAAd;IAeAd,OAAO,CAACC,GAAR,CAAYI,KAAZ;IACA,OAAOA,KAAP;EAEH,CAvBD,CAuBE,OAAMH,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ,C,CAED;;;AAGA,eAAeiB,WAAf,GAA6B;EACzB,IAAG;IACC,MAAMtB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAClB,GAAEN,QAAS,YADO,CAAvB;IAGA,MAAM4B,SAAS,GAAGvB,QAAQ,CAACE,IAAT,CAAcqB,SAAhC;IACApB,OAAO,CAACC,GAAR,CAAYmB,SAAZ;IACA,OAAOA,SAAP;EACH,CAPD,CAOE,OAAMlB,KAAN,EAAY;IACV,OAAOA,KAAP;EACH;AACJ;;AAED,eAAemB,WAAf,CAA2BL,IAA3B,EAAiC;EAC7B,MAAMvB,KAAK,CAAC6B,IAAN,CAAY,GAAE9B,QAAS,QAAvB,EAAgC;IAClCO,IAAI,EAAEiB;EAD4B,CAAhC,EAEDO,IAFC,CAEI,UAAS1B,QAAT,EAAmB;IACvBG,OAAO,CAACC,GAAR,CAAYJ,QAAZ;EACH,CAJG,EAID2B,KAJC,CAIK,UAAUtB,KAAV,EAAiB;IACxBF,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACD,CANG,CAAN;AAOH;;AAED,SACIN,WADJ,EAEIO,QAFJ,EAGIgB,WAHJ,EAIIE,WAJJ"},"metadata":{},"sourceType":"module"}